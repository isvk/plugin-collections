{"version":3,"sources":["store/loadStatus.ts","store/categories/reducer.ts","store/categories/types.ts","store/products/reducer.ts","store/products/types.ts","models/main.ts","store/main/reducer.ts","store/main/types.ts","store/rootReducer.ts","store/main/saga.ts","store/categories/actions.ts","store/products/actions.ts","store/main/actions.ts","store/rootSaga.ts","services/index.ts","services/http.ts","services/api/apiAll.ts","serviceWorker.ts","hooks/useCustomSelector.ts","store/rootSelector.ts","store/main/selectors.ts","components/Alert/Alert.tsx","components/Image/Image.tsx","components/Head/Head.tsx","hooks/useEventListener.ts","components/ButtonArrow/ButtonArrow.tsx","components/ListCategories/Category/Category.tsx","components/ListCategories/ListCategories.tsx","components/ListProducts/Product/Product.tsx","components/ListProducts/ListProducts.tsx","components/MainPage/MainPage.tsx","hooks/useCustomDispatch.ts","App.tsx","index.tsx"],"names":["loadStatus","reducer","state","List","action","type","categories","forEach","item","push","products","initialMain","status","notLoaded","head_description","head_subtitle","head_title","head_logo","Main","Record","main","set","createRootReducer","history","combineReducers","router","connectRouter","loadAllAsync","mainSaga","services","call","container","ApiAll","loadAll","response","sort","a","b","Date","created_at","getTime","put","loaded","errorServer","takeEvery","bottle","Bottle","service","getFetch","textQuery","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","json","http","query","variables","data","Boolean","window","location","hostname","match","useCustomSelector","selector","arg","useSelector","mainState","categoryState","mainGetStatus","createSelector","productsGetCategoryByUrl","_","prop","urlCategory","filter","product","category","url","Alert","props","Wrapper","LoaderIcon","size","text","WarningIcon","imageStatus","styled","div","LoaderStyledIcon","WarningStyledIcon","Image","useState","setStatus","Img","className","src","getUrlImg","alt","onLoad","onError","sources","length","map","source","index","srcSet","media","key","process","getSrcSet","x1","x2","result","join","undefined","img","Head","WrapperLogo","ImageStyled","Text","Title","Subtitle","Description","dangerouslySetInnerHTML","__html","header","theme","media_mobile","h1","h2","useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","current","targetElement","addEventListener","eventListener","event","removeEventListener","ButtonArrow","ButtonLeftArrow","LeftArrow","onClick","handleScroll","scrollWidth","ButtonRightArrow","RightArrow","ButtonArrowStyled","button","LeftArrowStyledIcon","RightArrowStyledIcon","Category","currentCategory","useParams","LinkCategory","to","Border","selected","name","Name","Link","ListCategories","refWrapper","useReducer","left","right","dispatch","isTouchDevice","matchMedia","matches","drawArrows","useCallback","actions","setLeft","scrollLeft","setRight","offsetWidth","direction","scrollTo","behavior","onScroll","WrapperListCategory","ref","id","value","Error","Product","LinkProduct","href","link","img_jpeg_300","getSourcesForProduct","img_webp_150","img_webp_300","img_jpeg_150","img_webp_600","img_jpeg_600","config","ListProducts","allProducts","countNextItem","setCountNextItem","slice","scrollY","innerHeight","document","documentElement","scrollHeight","MainPage","useDispatch","App","exact","path","component","createBrowserHistory","basename","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","rootSaga","all","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gNAAYA,E,yFCwBGC,EAhBC,WAAiF,IAAhFC,EAA+E,uDAAvDC,YAAK,IAAKC,EAA6C,uCAC5F,OAAQA,EAAOC,MACX,ICVuB,kBDWnB,OAAOH,EAEX,ICZsB,iBDgBlB,OAHAE,EAAOE,WAAWC,SAAQ,SAACC,GACvBN,EAAQA,EAAMO,KAAKD,MAEhBN,EAEX,QACI,OAAOA,IEIJD,EAhBC,WAAgF,IAA/EC,EAA8E,uDAAvDC,YAAK,IAAKC,EAA6C,uCAC3F,OAAQA,EAAOC,MACX,ICVqB,gBDWjB,OAAOH,EAEX,ICZoB,eDgBhB,OAHAE,EAAOM,SAASH,SAAQ,SAACC,GACrBN,EAAQA,EAAMO,KAAKD,MAEhBN,EAEX,QACI,OAAOA,I,kCHpBPF,O,yBAAAA,I,mBAAAA,I,8BAAAA,M,KKWZ,IAAMW,EAAqB,CACvBC,OAAQZ,EAAWa,UACnBC,iBAAkB,GAClBC,cAAe,GACfC,WAAY,GACZC,UAAW,MAGMC,E,4HAAaC,YAAOR,ICI1BV,EAhBC,WAA+E,IAA9EC,EAA6E,uDAAzD,IAAIgB,EAAQd,EAA6C,uCAC1F,OAAQA,EAAOC,MACX,ICRgB,WDSZ,OAAOH,EAEX,ICZgB,WDaZ,OAAOE,EAAOgB,KAElB,ICbkB,aDcd,OAAOlB,EAAMmB,IAAI,SAAUjB,EAAOQ,QAEtC,QACI,OAAOV,IEGJoB,EARW,SAACC,GAAD,OACtBC,YAAgB,CACZC,OAAQC,YAAcH,GACtBH,OACAd,aACAI,c,oDCTEiB,G,WAoBeC,GApBzB,SAAUD,EAAaE,EAAyBzB,GAAhD,uEAEuB,OAFvB,kBAE6B0B,YAAKD,EAASE,UAAUC,OAAOC,SAF5D,OAYQ,OAVIC,EAFZ,QAIiBxB,SAASyB,MAAK,SAAUC,EAAgBC,GAC7C,OAAO,IAAIC,KAAKD,EAAEE,YAAYC,UAAY,IAAIF,KAAKF,EAAEG,YAAYC,aAGrEN,EAAS5B,WAAW6B,MAAK,SAAUC,EAAiBC,GAChD,OAAOD,EAAED,KAAOE,EAAEF,QAT9B,SAYcM,YCbT,CACGpC,KRTsB,iBQUtBC,WDWwB4B,EAAS5B,aAZzC,OAaQ,OAbR,UAacmC,YEdT,CACGpC,KPToB,eOUpBK,SFYsBwB,EAASxB,WAbvC,QAcQ,OAdR,UAcc+B,YGdT,CACGpC,KLXgB,WKYhBe,KHYkB,2BAAKc,EAASd,MAAf,IAAqBR,OAAQZ,EAAW0C,WAdjE,gCAgBQ,OAhBR,oCAgBcD,YGVT,CACGpC,KLfkB,aKgBlBO,OHQoBZ,EAAW2C,cAhBvC,sDAoBe,SAAUf,EAASC,GAAnB,iEACX,OADW,SACLe,YF9Bc,WE8BYjB,EAAcE,GADnC,uCI1BA,I,QCCXgB,EAAS,I,OAAIC,GAEFD,IACfA,EAAOE,QAAQ,Q,sCCLXC,SAAW,SAACC,GACR,OAAOC,MAAM,wCAAyC,CAClDC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,KACtBY,MAAK,SAAC3B,GAAD,OAAwBA,EAAS4B,cDNjDjB,EAAOE,QAAQ,UEHX,WAAoBgB,GAAc,IAAD,gCAAbA,OAAa,KAEjC9B,QAAU,WAwCN,OAAO,EAAK8B,KACPf,SAxCa,CACdgB,MAAM,g4BAoCNC,UAAW,KAIVJ,MACG,SAAC3B,GAAD,OACIA,EAASgC,WF3CI,QGGbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yBCVS,SAASC,EAA2CC,EAAaC,GAC5E,OAAOC,aAAY,SAACzE,GAAD,OAAmBuE,EAASvE,EAAOwE,M,YCF7CE,EAAY,SAAC1E,GAAD,OAA6BA,EAAMkB,MAC/CyD,EAAgB,SAAC3E,GAAD,OAA6BA,EAAMI,YAGnDwE,EAAgBC,YAAeH,GCTnB,SAAC1E,GAAD,OAAuBA,EAAMU,UDWzCoE,EAA2BD,aAJZ,SAAC7E,GAAD,OAA6BA,EAAMQ,YAJpC,SAACuE,EAAWC,GAAZ,OAA0BA,KAQoC,SAACxE,EAAUyE,GAAX,OACrFzE,EAAS0E,QAAO,SAACC,GAAD,OACZF,GAAcE,EAAQC,UAAYD,EAAQC,SAASC,MAAQJ,Q,mnBELpD,SAASK,EAAMC,GAC1B,OACI,kBAACC,EAAD,KACoB,YAAfD,EAAMpF,MACH,oCACI,kBAACsF,EAAD,CAAYC,KAAK,OADrB,IAC8BH,EAAMI,MAGxB,YAAfJ,EAAMpF,MACH,oCACI,kBAACyF,GAAD,CAAaF,KAAK,OADtB,IAC+BH,EAAMI,OAOrD,ICXYE,EDWNL,EAAUM,IAAOC,IAAV,KAYPN,EAAaK,YAAOE,IAAPF,CAAH,KAWVF,GAAcE,YAAOG,IAAPH,CAAH,K,wGC5BF,SAASI,GAAMX,GAAqB,IAAD,IAClBY,mBAASN,EAAYlF,WADH,oBACvCD,EADuC,KAC/B0F,EAD+B,KAGxCC,EACF,kBAAC,GAAD,CACIC,UAAWf,EAAMe,UACjBC,IAAKC,GAAUjB,EAAMF,IAAK3E,GAC1B+F,IAAKlB,EAAMkB,IACX/F,OAAQA,EACRgG,OAAQ,kBAAMN,EAAU1F,IAAWmF,EAAYpD,YAAcoD,EAAYpD,YAAcoD,EAAYrD,SACnGmE,QAAS,kBAAMP,EAAUP,EAAYpD,gBAI7C,OACI,qCACK,UAAA8C,EAAMqB,eAAN,eAAeC,QACZ,iCACKtB,EAAMqB,QAAQE,KACX,SAACC,EAAiBC,GAAlB,OACID,EAAOE,QACH,4BAAQA,OAAQF,EAAOE,OAAQ9G,KAAM4G,EAAO5G,KAAM+G,MAAOH,EAAOG,MAAOC,IAAKH,OAGvFX,GAGLA,I,SAjCJR,O,yBAAAA,I,mBAAAA,I,8BAAAA,M,KAuCZ,IAAMW,GAAY,SAACnB,GAA4D,IAA9C3E,EAA6C,uDAAvBmF,EAAYrD,OAC/D,OAAO6C,GAAOA,EAAIwB,QAAUnG,IAAWmF,EAAYpD,YAC7C,OAAS4C,EACT+B,0CAGGC,GAAY,SAACC,EAAaC,GACnC,IAAMC,EAAS,GAKf,OAHIF,GAAIE,EAAOjH,KAAKiG,GAAUc,GAAM,OAChCC,GAAIC,EAAOjH,KAAKiG,GAAUe,GAAM,OAE7BC,EAAOX,OAASW,EAAOC,KAAK,WAAQC,GAGzClC,GAAUM,IAAO6B,IAAV,MACK,SAACpC,GACX,OAAQA,EAAM7E,QACV,KAAKmF,EAAYlF,UACb,MAAO,+DACX,KAAKkF,EAAYrD,OACjB,KAAKqD,EAAYpD,YACjB,QACI,MAAO,c,4kCCvER,SAASmF,KAAQ,IAAD,EACvB1G,EAAOoD,EAAkBI,GAE7B,OACI,kBAAC,GAAD,KACI,kBAACmD,GAAD,KACI,kBAACC,GAAD,CAAazC,IAAG,UAAEnE,EAAKH,iBAAP,aAAE,EAAgBsE,IAAKoB,IAAI,UAE/C,kBAACsB,GAAD,KACI,kBAACC,GAAD,KAAQ9G,EAAKJ,YACb,kBAACmH,GAAD,KAAW/G,EAAKL,eAChB,kBAACqH,GAAD,CAAaC,wBAAyB,CAAEC,OAAQlH,EAAKN,sBAMrE,IAAM4E,GAAUM,IAAOuC,OAAV,MAOPR,GAAc/B,IAAOC,IAAV,MAGQ,SAACR,GAAD,OAAwBA,EAAM+C,MAAMC,gBAKvDT,GAAchC,YAAOI,GAAPJ,CAAH,MAOQ,SAACP,GAAD,OAAwBA,EAAM+C,MAAMC,gBAOvDR,GAAOjC,IAAOC,IAAV,MAEJiC,GAAQlC,IAAO0C,GAAV,MAKLP,GAAWnC,IAAO2C,GAAV,MAIRP,GAAcpC,IAAOC,IAAV,MCzDF,SAAS2C,GACpBC,EACAC,EACAC,GAGA,IAAMC,EAAeC,mBAGrBC,qBAAU,WACNF,EAAaG,QAAUL,IACxB,CAACA,IACJI,qBACI,WACI,IAAME,GAAmC,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASI,UAAW/E,OACtD,GAAMgF,GAAiBA,EAAcC,iBAArC,CAIA,IAAMC,EAAgB,SAACC,GACbP,EAAaG,SACfH,EAAaG,QAAQI,IAK7B,OAFAH,EAAcC,iBAAiBR,EAAWS,GAEnC,WACHF,EAAcI,oBAAoBX,EAAWS,OAIrD,CAACT,EAAWE,I,+wBC1BL,SAASU,GAAYhE,GAChC,OACI,oCACoB,SAAfA,EAAMpF,KACH,kBAACqJ,GAAD,KACI,kBAACC,GAAD,CAAW/D,KAAK,KAAKgE,QAAS,kBAAMnE,EAAMoE,aAAapE,EAAMqE,iBAGjE,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAYpE,KAAK,KAAKgE,QAAS,kBAAMnE,EAAMoE,aAAapE,EAAMqE,kBAOlF,IAAMG,GAAoBjE,IAAOkE,OAAV,MAejBR,GAAkB1D,YAAOiE,GAAPjE,CAAH,MAEf+D,GAAmB/D,YAAOiE,GAAPjE,CAAH,MAIhB2D,GAAY3D,YAAOmE,KAAPnE,CAAH,MAMTgE,GAAahE,YAAOoE,KAAPpE,CAAH,M,ojCC3CD,SAASqE,GAAS5E,GAAwB,IAAD,EAC/B6E,EAAoBC,cAAjCpF,YAER,OACI,kBAAC,GAAD,KACI,kBAACqF,GAAD,CAAcC,GAAIhF,EAAMH,SAASC,MAAQ+E,EAAkB,IAAM,aAAe7E,EAAMH,SAASC,KAC3F,kBAACmF,GAAD,CAAQC,SAAUlF,EAAMH,SAASC,MAAQ+E,GACrC,kBAAC,GAAD,CAAa/E,IAAG,UAAEE,EAAMH,SAASuC,WAAjB,aAAE,EAAoBtC,IAAKoB,IAAKlB,EAAMH,SAASsF,QAEnE,kBAACC,GAAD,KAAOpF,EAAMH,SAASsF,QAMtC,IAAMlF,GAAUM,IAAOC,IAAV,MAKY,SAACR,GAAD,OAAwBA,EAAM+C,MAAMC,gBAMvD+B,GAAexE,YAAO8E,KAAP9E,CAAH,MAMZ0E,GAAS1E,IAAOC,IAAV,MAOY,SAACR,GAAD,OAAmCA,EAAMkF,SAAW,UAAY,aAIlF3C,GAAchC,YAAOI,GAAPJ,CAAH,MAUX6E,GAAO7E,IAAOC,IAAV,M,qeCzDK,SAAS8E,KACpB,IAAMzK,EAAakE,EAAkBK,GAC/BmG,EAAa/B,iBAAuB,MAFL,EAGXgC,qBAAWhL,GAAS,CAAEiL,MAAM,EAAOC,OAAO,IAH/B,oBAG9BjL,EAH8B,KAGvBkL,EAHuB,KAI/BC,EAAgBjH,OAAOkH,WAAW,kBAAkBC,QAGpDC,EAAaC,uBAAY,WACvBT,EAAW7B,SAAWkC,GACtBD,EAASM,GAAQC,QAAQX,EAAW7B,QAAQyC,WAAa,IACzDR,EACIM,GAAQG,SACJb,EAAW7B,QAAQW,YAAckB,EAAW7B,QAAQ2C,YAAcd,EAAW7B,QAAQyC,eAI7FR,EAASM,GAAQC,SAAQ,IACzBP,EAASM,GAAQG,UAAS,OAE/B,CAACR,IAEExB,EAAe4B,uBAAY,SAACM,GAC1Bf,EAAW7B,SACX6B,EAAW7B,QAAQ6C,SAAS,CACxBd,KAAMF,EAAW7B,QAAQyC,WAAaG,EACtCE,SAAU,aAGnB,IASH,OAPArD,GAAiB,SAAU4C,GAE3BtC,qBAAU,WACNsC,MAED,IAGC,kBAAC,GAAD,CAASU,SAAUV,GACdtL,EAAMgL,MAAQ,kBAACzB,GAAD,CAAapJ,KAAM,OAAQwJ,aAAcA,EAAcC,aAlC1D,MAoCZ,kBAACqC,GAAD,CAAqBC,IAAKpB,GACrB1K,EAAW0G,KAAI,SAAC1B,GAAD,OACZ,kBAAC+E,GAAD,CAAU/E,SAAUA,EAAU+B,IAAK/B,EAAS+G,SAInDnM,EAAMiL,OAAS,kBAAC1B,GAAD,CAAapJ,KAAM,QAASwJ,aAAcA,EAAcC,YA1C5D,OA+CxB,IAAM7J,GAAU,SAACC,EAA0CE,GACvD,OAAQA,EAAOC,MACX,IAAK,UACD,OAAOH,EAAMgL,OAAS9K,EAAOkM,MAAtB,2BAAmCpM,GAAnC,IAA0CgL,KAAM9K,EAAOkM,QAAUpM,EAC5E,IAAK,WACD,OAAOA,EAAMiL,QAAU/K,EAAOkM,MAAvB,2BAAoCpM,GAApC,IAA2CiL,MAAO/K,EAAOkM,QAAUpM,EAC9E,QACI,MAAM,IAAIqM,QAIhBb,GAAU,CACZC,QAAS,SAACW,GACN,MAAO,CACHjM,KAAM,UACNiM,MAAOA,IAGfT,SAAU,SAACS,GACP,MAAO,CACHjM,KAAM,WACNiM,MAAOA,KAKb5G,GAAUM,IAAOC,IAAV,MAQPkG,GAAsBnG,IAAOC,IAAV,M,8wBCpFV,SAASuG,GAAQ/G,GAAuB,IAAD,EAClD,OACI,kBAAC,GAAD,KACI,kBAACgH,GAAD,CAAaC,KAAMjH,EAAMJ,QAAQsH,MAC7B,kBAAC,GAAD,CACIpH,IAAG,UAAEE,EAAMJ,QAAQuH,oBAAhB,aAAE,EAA4BrH,IACjCuB,QAAS+F,GAAqBpH,EAAMJ,SACpCsB,IAAKlB,EAAMJ,QAAQuF,SAOvC,IAAMiC,GAAuB,SAACxH,GAA2B,IAAD,gBACpD,MAAO,CACH,CACI8B,OAAQI,GAAS,UAAClC,EAAQyH,oBAAT,aAAC,EAAsBvH,IAAvB,UAA4BF,EAAQ0H,oBAApC,aAA4B,EAAsBxH,KACnElF,KAAM,aACN+G,MAAO,sBAEX,CACID,OAAQI,GAAS,UAAClC,EAAQ2H,oBAAT,aAAC,EAAsBzH,IAAvB,UAA4BF,EAAQuH,oBAApC,aAA4B,EAAsBrH,KACnElF,KAAM,aACN+G,MAAO,sBAEX,CACID,OAAQI,GAAS,UAAClC,EAAQ0H,oBAAT,aAAC,EAAsBxH,IAAvB,UAA4BF,EAAQ4H,oBAApC,aAA4B,EAAsB1H,KACnElF,KAAM,cAEV,CACI8G,OAAQI,GAAS,UAAClC,EAAQuH,oBAAT,aAAC,EAAsBrH,IAAvB,UAA4BF,EAAQ6H,oBAApC,aAA4B,EAAsB3H,KACnElF,KAAM,eAEZ+E,QAAO,SAAC6B,GAAD,OAAqBA,EAAOE,WAGnCgG,GACW,EADXA,GAEgB,GAFhBA,GAGe,EAGfzH,GAAUM,IAAOC,IAAV,KACakH,IAA2BA,GAAqB,GAAWA,GACjEA,GACCA,GAEHA,GAIUA,IAIH,SAAC1H,GAAD,OAAwBA,EAAM+C,MAAMC,eAC/B0E,IAA0BA,GAAqB,GAAWA,GAChEA,GACCA,IAInBV,GAAczG,IAAO5D,EAAV,MAQX4F,GAAchC,YAAOI,GAAPJ,CAAH,M,yICzEF,SAASoH,KAAgB,IAC5BjI,EAAgBoF,cAAhBpF,YACFkI,EAAc7I,EAAkBQ,EAA0BG,GAF7B,EAIOkB,mBADlB,IAHW,oBAI5BiH,EAJ4B,KAIbC,EAJa,KAK7B7M,EAAW2M,EAAYG,MAAM,EAAGF,GAatC,OAFA1E,GAAiB,UATM,WAEfxE,OAAOqJ,QAAUrJ,OAAOsJ,YAAc,KAAOC,SAASC,gBAAgBC,cACtEP,EAAgBD,EAAYzH,MAE5B2H,EAAiBD,EATD,OAgBpB,kBAAC,GAAD,KACK5M,EAASsG,KAAI,SAAC3B,GAAD,OACV,kBAACmH,GAAD,CAASnH,QAASA,EAASgC,IAAKhC,EAAQgH,SAMxD,IAAM3G,GAAUM,IAAOC,IAAV,M,+OCvBE,SAAS6H,KACpB,IAAMlN,EAAS4D,EAAkBM,GAC3BsG,ECTC2C,cDgBP,OALA7E,qBAAU,WACNkC,ElBZH,CACG/K,KLLgB,euBkBjB,IAGC,kBAAC,IAAD,CAAemI,MAAOA,IAClB,kBAAC,GAAD,KACK5H,IAAWZ,EAAWa,WAAa,kBAAC2E,EAAD,CAAOnF,KAAK,UAAUwF,KAAK,wDAC9DjF,IAAWZ,EAAW2C,aAAe,kBAAC6C,EAAD,CAAOnF,KAAK,UAAUwF,KAAK,oFAChEjF,IAAWZ,EAAW0C,QACnB,oCACI,kBAACoF,GAAD,MACA,8BACI,kBAACiD,GAAD,MACA,kBAACqC,GAAD,UAerB,IjB1CSvL,GiB0CH2G,GAAQ,CACjBC,aAAc,KAGZ/C,GAAUM,IAAOC,IAAV,MAMY,SAACR,GAAD,OAAwBA,EAAM+C,MAAMC,gBE3C9CuF,GATO,WAClB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,KACjC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,yBAAyBC,UAAWL,OCQrDvM,I,YAAU6M,YAAqB,CAAEC,SAAU,gCAClDC,GAAiBC,cACjBC,GAAmBpK,OAAOqK,sCAAwCC,IAClEC,GAAQC,YACVC,EAAYtN,IACZiN,GAAiBM,YAAgBR,GAAgBS,YAAiBxN,OAEtE+M,GAAeU,KpBnBCnN,GoBmBYA,EpBlBxB,UAAO,SAAUoN,IAAV,iEACH,OADG,SACGC,YAAI,CAACtN,EAASC,MADjB,oCAAUoN,QoBoBrBE,IAASC,OACL,kBAAC,IAAD,CAAUT,MAAOA,IACb,kBAAC,IAAD,CAAiBpN,QAASA,IACtB,kBAAC,GAAD,QAGRoM,SAAS0B,eAAe,ShB4GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3L,MAAK,SAAA4L,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.94fd9e2a.chunk.js","sourcesContent":["export enum loadStatus {\n    notLoaded,\n    loaded,\n    errorServer,\n}\n","import { List } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Category from \"src/models/category\";\n\nexport type TStoreCategory = List<Category>;\n\nconst reducer = (state: TStoreCategory = List([]), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_CATEGORIES:\n            return state;\n\n        case types.ADD_CATEGORIES:\n            action.categories.forEach((item: Category) => {\n                state = state.push(item);\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_CATEGORIES = \"LOAD_CATEGORIES\";\nexport const ADD_CATEGORIES = \"ADD_CATEGORIES\";\n","import { List } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Product from \"src/models/product\";\n\nexport type TStoreProduct = List<Product>;\n\nconst reducer = (state: TStoreProduct = List([]), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_PRODUCTS:\n            return state;\n\n        case types.ADD_PRODUCTS:\n            action.products.forEach((item: Product) => {\n                state = state.push(item);\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const LOAD_PRODUCTS = \"LOAD_PRODUCTS\";\nexport const ADD_PRODUCTS = \"ADD_PRODUCTS\";\n","import { Record } from \"immutable\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nexport interface IMain {\n    status: loadStatus;\n    head_description: string;\n    head_subtitle: string;\n    head_title: string;\n    head_logo: { url: string } | null;\n}\n\nconst initialMain: IMain = {\n    status: loadStatus.notLoaded,\n    head_description: \"\",\n    head_subtitle: \"\",\n    head_title: \"\",\n    head_logo: null,\n};\n\nexport default class Main extends Record(initialMain) implements IMain {}\n","import { ActionTypesInfer } from \"src/store/actionTypes\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\nimport Main from \"src/models/main\";\n\nexport type TStoreMain = Main;\n\nconst reducer = (state: TStoreMain = new Main(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_ALL:\n            return state;\n\n        case types.ADD_MAIN:\n            return action.main;\n\n        case types.SET_STATUS:\n            return state.set(\"status\", action.status);\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const ADD_MAIN = \"ADD_MAIN\";\nexport const LOAD_ALL = \"LOAD_ALL\";\nexport const SET_STATUS = \"SET_STATUS\";\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History, LocationState } from \"history\";\nimport categories, { TStoreCategory } from \"./categories/reducer\";\nimport products, { TStoreProduct } from \"./products/reducer\";\nimport main, { TStoreMain } from \"./main/reducer\";\n\nexport interface IStore {\n    router: typeof connectRouter;\n    main: TStoreMain;\n    categories: TStoreCategory;\n    products: TStoreProduct;\n}\n\nconst createRootReducer = (history: History<LocationState>) =>\n    combineReducers({\n        router: connectRouter(history),\n        main,\n        categories,\n        products,\n    });\n\nexport default createRootReducer;\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { addMain, loadAll, setStatus } from \"./actions\";\nimport { addCategories } from \"src/store/categories/actions\";\nimport { addProducts } from \"src/store/products/actions\";\nimport { loadStatus } from \"../loadStatus\";\nimport { IApiCategory } from \"src/services/api/typings/apiCategory\";\nimport { IApiProduct } from \"src/services/api/typings/apiProduct\";\n\nfunction* loadAllAsync(services: typeof bottle, action: ReturnType<typeof loadAll>) {\n    try {\n        let response = yield call(services.container.ApiAll.loadAll);\n\n        response.products.sort(function (a: IApiProduct, b: IApiProduct) {\n            return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n        });\n\n        response.categories.sort(function (a: IApiCategory, b: IApiCategory) {\n            return a.sort - b.sort;\n        });\n\n        yield put(addCategories(response.categories));\n        yield put(addProducts(response.products));\n        yield put(addMain({ ...response.main, status: loadStatus.loaded }));\n    } catch (e) {\n        yield put(setStatus(loadStatus.errorServer));\n    }\n}\n\nexport default function* mainSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_ALL, loadAllAsync, services);\n}\n","import * as types from \"./types\";\nimport Category from \"src/models/category\";\n\nexport const loadCategories = () =>\n    ({\n        type: types.LOAD_CATEGORIES,\n    } as const);\n\nexport const addCategories = (categories: Category[]) =>\n    ({\n        type: types.ADD_CATEGORIES,\n        categories,\n    } as const);\n","import * as types from \"./types\";\nimport Product from \"src/models/product\";\n\nexport const loadProducts = () =>\n    ({\n        type: types.LOAD_PRODUCTS,\n    } as const);\n\nexport const addProducts = (products: Product[]) =>\n    ({\n        type: types.ADD_PRODUCTS,\n        products,\n    } as const);\n","import * as types from \"./types\";\nimport Main from \"src/models/main\";\nimport { loadStatus } from \"../loadStatus\";\n\nexport const loadAll = () =>\n    ({\n        type: types.LOAD_ALL,\n    } as const);\n\nexport const addMain = (main: Main) =>\n    ({\n        type: types.ADD_MAIN,\n        main,\n    } as const);\n\nexport const setStatus = (status: loadStatus) =>\n    ({\n        type: types.SET_STATUS,\n        status,\n    } as const);\n","import { all } from \"redux-saga/effects\";\nimport Bottle from \"bottlejs\";\nimport mainSaga from \"src/store/main/saga\";\n\nexport default (services: Bottle) => {\n    return function* rootSaga() {\n        yield all([mainSaga(services)]);\n    };\n};\n","import Bottle from \"bottlejs\";\nimport Http from \"./http\";\n\nimport ApiAll from \"./api/apiAll\";\n\nlet bottle = new Bottle();\n\nexport default bottle;\nbottle.service(\"Http\", Http);\nbottle.service(\"ApiAll\", ApiAll, \"Http\");\n\ndeclare module \"bottlejs\" {\n    interface IContainer {\n        ApiAll: ApiAll;\n    }\n}\n","import { IHttp } from \"./IHttp\";\n\nexport default class Http implements IHttp {\n    getFetch = (textQuery: { query: string }) => {\n        return fetch(\"/plugin-collections/build/api/graphql\", {\n            method: \"POST\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n            body: JSON.stringify(textQuery),\n        }).then((response: Response) => response.json());\n    };\n}\n","import { IHttp } from \"../IHttp\";\nimport { IApiMain } from \"./typings/apiMain\";\nimport { IApiCategory } from \"./typings/apiCategory\";\nimport { IApiProduct } from \"./typings/apiProduct\";\n\nexport default class ApiAll {\n    constructor(private http: IHttp) {}\n\n    loadAll = () => {\n        const textQuery = {\n            query: `{\n            main {\n                head_title\n                head_subtitle\n                head_description\n                head_logo\n                    {url}\n                }\n            categories {\n                id\n                sort\n                url\n                name\n                img {url}\n            }\n            products {\n                id\n                created_at            \n                category\n                    {id url}\n                name\n                link\n                img_webp_150\n                    {url}\n                img_webp_300\n                    {url}\n                img_webp_600\n                    {url}\n                img_jpeg_150\n                    {url} \n                img_jpeg_300\n                    {url}\n                img_jpeg_600\n                    {url}\n            }\n        }`,\n            variables: {},\n        };\n        return this.http\n            .getFetch(textQuery)\n            .then(\n                (response: { data: { main: IApiMain[]; categories: IApiCategory[]; products: IApiProduct[] } }) =>\n                    response.data\n            );\n    };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useSelector } from \"react-redux\";\nimport { IStore } from \"src/store/rootReducer\";\nimport * as rootSelector from \"src/store/rootSelector\";\n\ntype InferSelectorFunctionsTypes<T> = T extends { [key: string]: infer U } ? U : never;\n\ntype InferredTypes = InferSelectorFunctionsTypes<typeof rootSelector>;\n\nexport default function useCustomSelector<T extends InferredTypes>(selector: T, arg?: number | string) {\n    return useSelector((state: IStore) => selector(state, arg) as ReturnType<T>);\n}\n","import { createSelector } from \"reselect\";\nimport { IStore } from \"src/store/rootReducer\";\nimport Product from \"src/models/product\";\nimport { getStatus } from \"./main/selectors\";\n\nconst propsFirstSelector = (_: IStore, prop: any) => prop;\n\nexport const mainState = (state: Readonly<IStore>) => state.main;\nexport const categoryState = (state: Readonly<IStore>) => state.categories;\nexport const productState = (state: Readonly<IStore>) => state.products;\n\nexport const mainGetStatus = createSelector(mainState, getStatus);\n\nexport const productsGetCategoryByUrl = createSelector(productState, propsFirstSelector, (products, urlCategory) =>\n    products.filter((product: Product) =>\n        urlCategory ? product.category && product.category.url === urlCategory : true\n    )\n);\n","import { TStoreMain } from \"./reducer\";\n\nexport const getStatus = (state: TStoreMain) => state.status;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Warning as WarningStyledIcon } from \"@styled-icons/entypo/Warning\";\nimport { Loader5 as LoaderStyledIcon } from \"@styled-icons/remix-fill/Loader5\";\n\ninterface IAlertProps {\n    type: \"preload\" | \"warning\";\n    text: string;\n}\n\nexport default function Alert(props: IAlertProps) {\n    return (\n        <Wrapper>\n            {props.type === \"preload\" && (\n                <>\n                    <LoaderIcon size=\"28\" /> {props.text}\n                </>\n            )}\n            {props.type === \"warning\" && (\n                <>\n                    <WarningIcon size=\"28\" /> {props.text}\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 50% 0;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 28px;\n    color: #4a4a4a;\n`;\n\nconst LoaderIcon = styled(LoaderStyledIcon)`\n    animation: rotate 2s linear infinite;\n    color: #2196f3;\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\n\nconst WarningIcon = styled(WarningStyledIcon)`\n    color: #ff0000;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IImageProps {\n    url?: string;\n    alt?: string;\n    className?: string;\n    sources?: ISource[];\n}\n\nexport interface ISource {\n    srcSet?: string;\n    type?: string;\n    media?: string;\n}\n\nexport enum imageStatus {\n    notLoaded,\n    loaded,\n    errorServer,\n}\n\nexport default function Image(props: IImageProps) {\n    const [status, setStatus] = useState(imageStatus.notLoaded);\n\n    const Img = (\n        <Wrapper\n            className={props.className}\n            src={getUrlImg(props.url, status)}\n            alt={props.alt}\n            status={status}\n            onLoad={() => setStatus(status === imageStatus.errorServer ? imageStatus.errorServer : imageStatus.loaded)}\n            onError={() => setStatus(imageStatus.errorServer)}\n        />\n    );\n\n    return (\n        <>\n            {props.sources?.length ? (\n                <picture>\n                    {props.sources.map(\n                        (source: ISource, index: number) =>\n                            source.srcSet && (\n                                <source srcSet={source.srcSet} type={source.type} media={source.media} key={index} />\n                            )\n                    )}\n                    {Img}\n                </picture>\n            ) : (\n                Img\n            )}\n        </>\n    );\n}\n\nconst getUrlImg = (url?: string, status: imageStatus = imageStatus.loaded) => {\n    return url && url.length && status !== imageStatus.errorServer\n        ? \"/api\" + url\n        : process.env.PUBLIC_URL + \"/notfound.svg\";\n};\n\nexport const getSrcSet = (x1?: string, x2?: string) => {\n    const result = [];\n\n    if (x1) result.push(getUrlImg(x1) + \" 1x\");\n    if (x2) result.push(getUrlImg(x2) + \" 2x\");\n\n    return result.length ? result.join(\", \") : undefined;\n};\n\nconst Wrapper = styled.img`\n    background: ${(props: { status: imageStatus }) => {\n        switch (props.status) {\n            case imageStatus.notLoaded:\n                return \"url(\" + process.env.PUBLIC_URL + \"preloader.svg) no-repeat center\";\n            case imageStatus.loaded:\n            case imageStatus.errorServer:\n            default:\n                return \"#ffffff\";\n        }\n    }};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { mainState } from \"src/store/rootSelector\";\nimport Image from \"src/components/Image/Image\";\nimport { IThemeProps } from \"src/components/MainPage/MainPage\";\n\nexport default function Head() {\n    let main = useCustomSelector(mainState);\n\n    return (\n        <Wrapper>\n            <WrapperLogo>\n                <ImageStyled url={main.head_logo?.url} alt=\"Logo\" />\n            </WrapperLogo>\n            <Text>\n                <Title>{main.head_title}</Title>\n                <Subtitle>{main.head_subtitle}</Subtitle>\n                <Description dangerouslySetInnerHTML={{ __html: main.head_description }} />\n            </Text>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.header`\n    display: flex;\n    align-items: center;\n    padding: 10px 0;\n    width: 100%;\n`;\n\nconst WrapperLogo = styled.div`\n    padding: 30px 100px 30px 70px;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        padding: 10px;\n    }\n`;\n\nconst ImageStyled = styled(Image)`\n    display: block;\n    width: 120px;\n    height: 120px;\n    border-radius: 60px;\n    border: 1px solid #ccc;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        width: 60px;\n        height: 60px;\n        border-radius: 30px;\n    }\n`;\n\nconst Text = styled.div``;\n\nconst Title = styled.h1`\n    font-size: 16px;\n    line-height: 30px;\n`;\n\nconst Subtitle = styled.h2`\n    font-weight: bold;\n`;\n\nconst Description = styled.div`\n    a {\n        color: #25578e;\n        text-decoration: none;\n        font-weight: bold;\n    }\n`;\n","import { useRef, useEffect, RefObject } from \"react\";\n\n/*\nhttps://usehooks.com/\nhttps://usehooks-typescript.com/use-event-listener/\n*/\n\nexport default function useEventListener<T extends HTMLElement = HTMLDivElement>(\n    eventName: string,\n    handler: Function,\n    element?: RefObject<T>\n) {\n    // Create a ref that stores handler\n    const savedHandler = useRef<Function>();\n    // Update ref.current value if handler changes.\n    // Pass it in useEffect for to prevent re-run every render\n    useEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(\n        () => {\n            const targetElement: T | Window = element?.current || window;\n            if (!(targetElement && targetElement.addEventListener)) {\n                return;\n            }\n            // Create event listener that calls handler function stored in ref\n            const eventListener = (event: Event) => {\n                if (!!savedHandler.current) {\n                    savedHandler.current(event);\n                }\n            };\n            targetElement.addEventListener(eventName, eventListener);\n            // Remove event listener on cleanup\n            return () => {\n                targetElement.removeEventListener(eventName, eventListener);\n            };\n        },\n        // Re-run if eventName or element changes\n        [eventName, element]\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronCircleLeft as LeftArrowStyledIcon } from \"@styled-icons/fa-solid/ChevronCircleLeft\";\nimport { ChevronCircleRight as RightArrowStyledIcon } from \"@styled-icons/fa-solid/ChevronCircleRight\";\nimport \"focus-visible\";\n\ninterface IButtonArrowProps {\n    type: \"left\" | \"right\";\n    handleScroll: (direction: number) => void;\n    scrollWidth: number;\n}\n\nexport default function ButtonArrow(props: IButtonArrowProps) {\n    return (\n        <>\n            {props.type === \"left\" ? (\n                <ButtonLeftArrow>\n                    <LeftArrow size=\"20\" onClick={() => props.handleScroll(props.scrollWidth)} />\n                </ButtonLeftArrow>\n            ) : (\n                <ButtonRightArrow>\n                    <RightArrow size=\"20\" onClick={() => props.handleScroll(props.scrollWidth)} />\n                </ButtonRightArrow>\n            )}\n        </>\n    );\n}\n\nconst ButtonArrowStyled = styled.button`\n    display: block;\n    position: absolute;\n    top: 53px;\n    padding: 10px;\n    cursor: pointer;\n    border: none;\n    background: unset;\n    z-index: 10;\n\n    &:focus:not(.focus-visible) {\n        outline: none;\n    }\n`;\n\nconst ButtonLeftArrow = styled(ButtonArrowStyled)``;\n\nconst ButtonRightArrow = styled(ButtonArrowStyled)`\n    right: 0;\n`;\n\nconst LeftArrow = styled(LeftArrowStyledIcon)`\n    color: #aaa;\n    background-color: #fff;\n    border-radius: 50%;\n`;\n\nconst RightArrow = styled(RightArrowStyledIcon)`\n    color: #aaa;\n    background-color: #fff;\n    border-radius: 50%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport CategoryModel from \"src/models/category\";\nimport { Link } from \"react-router-dom\";\nimport Image from \"src/components/Image/Image\";\nimport { IThemeProps } from \"src/components/MainPage/MainPage\";\n\ninterface ICategoryProps {\n    category: CategoryModel;\n}\n\nexport default function Category(props: ICategoryProps) {\n    const { urlCategory: currentCategory } = useParams();\n\n    return (\n        <Wrapper>\n            <LinkCategory to={props.category.url === currentCategory ? \"/\" : \"/category/\" + props.category.url}>\n                <Border selected={props.category.url === currentCategory}>\n                    <ImageStyled url={props.category.img?.url} alt={props.category.name} />\n                </Border>\n                <Name>{props.category.name}</Name>\n            </LinkCategory>\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    flex: 0 0 auto;\n    width: 82px;\n    padding: 30px 23px;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        width: 64px;\n        padding: 5px;\n    }\n`;\n\nconst LinkCategory = styled(Link)`\n    display: block;\n    color: #000;\n    text-decoration: none;\n`;\n\nconst Border = styled.div`\n    display: block;\n    position: relative;\n    overflow: hidden;\n    height: 0;\n    padding: 50%;\n    background-color: #fff;\n    border: 1px solid ${(props: { selected: boolean }) => (props.selected ? \"#ff0000\" : \"#cccccc\")};\n    border-radius: 50%;\n`;\n\nconst ImageStyled = styled(Image)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px);\n    border: 3px solid #ffffff;\n    border-radius: 50%;\n`;\n\nconst Name = styled.div`\n    text-overflow: ellipsis;\n    text-align: center;\n    line-height: 25px;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n","import React, { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport useEventListener from \"src/hooks/useEventListener\";\nimport { categoryState } from \"src/store/rootSelector\";\nimport ButtonArrow from \"src/components/ButtonArrow/ButtonArrow\";\nimport Category from \"./Category/Category\";\n\nexport default function ListCategories() {\n    const categories = useCustomSelector(categoryState);\n    const refWrapper = useRef<HTMLDivElement>(null);\n    const [state, dispatch] = useReducer(reducer, { left: false, right: false });\n    const isTouchDevice = window.matchMedia(\"(pointer:fine)\").matches;\n    const scrollWidth = 134 * 4;\n\n    const drawArrows = useCallback(() => {\n        if (refWrapper.current && isTouchDevice) {\n            dispatch(actions.setLeft(refWrapper.current.scrollLeft > 0));\n            dispatch(\n                actions.setRight(\n                    refWrapper.current.scrollWidth - refWrapper.current.offsetWidth > refWrapper.current.scrollLeft\n                )\n            );\n        } else {\n            dispatch(actions.setLeft(false));\n            dispatch(actions.setRight(false));\n        }\n    }, [isTouchDevice]);\n\n    const handleScroll = useCallback((direction: number) => {\n        if (refWrapper.current) {\n            refWrapper.current.scrollTo({\n                left: refWrapper.current.scrollLeft + direction,\n                behavior: \"smooth\",\n            });\n        }\n    }, []);\n\n    useEventListener(\"resize\", drawArrows);\n\n    useEffect(() => {\n        drawArrows();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Wrapper onScroll={drawArrows}>\n            {state.left && <ButtonArrow type={\"left\"} handleScroll={handleScroll} scrollWidth={-scrollWidth} />}\n\n            <WrapperListCategory ref={refWrapper}>\n                {categories.map((category) => (\n                    <Category category={category} key={category.id} />\n                ))}\n            </WrapperListCategory>\n\n            {state.right && <ButtonArrow type={\"right\"} handleScroll={handleScroll} scrollWidth={scrollWidth} />}\n        </Wrapper>\n    );\n}\n\nconst reducer = (state: { left: boolean; right: boolean }, action: { type: string; value: boolean }) => {\n    switch (action.type) {\n        case \"setLeft\":\n            return state.left !== action.value ? { ...state, left: action.value } : state;\n        case \"setRight\":\n            return state.right !== action.value ? { ...state, right: action.value } : state;\n        default:\n            throw new Error();\n    }\n};\n\nconst actions = {\n    setLeft: (value: boolean) => {\n        return {\n            type: \"setLeft\",\n            value: value,\n        };\n    },\n    setRight: (value: boolean) => {\n        return {\n            type: \"setRight\",\n            value: value,\n        };\n    },\n};\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    user-select: none;\n    flex-wrap: wrap;\n    position: relative;\n`;\n\nconst WrapperListCategory = styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    ::-webkit-scrollbar {\n        display: none;\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ProductModel from \"src/models/product\";\nimport Image, { getSrcSet, ISource } from \"src/components/Image/Image\";\nimport { IThemeProps } from \"src/components/MainPage/MainPage\";\n\ninterface IProductProps {\n    product: ProductModel;\n}\n\nexport default function Product(props: IProductProps) {\n    return (\n        <Wrapper>\n            <LinkProduct href={props.product.link}>\n                <ImageStyled\n                    url={props.product.img_jpeg_300?.url}\n                    sources={getSourcesForProduct(props.product)}\n                    alt={props.product.name}\n                />\n            </LinkProduct>\n        </Wrapper>\n    );\n}\n\nconst getSourcesForProduct = (product: ProductModel) => {\n    return [\n        {\n            srcSet: getSrcSet(product.img_webp_150?.url, product.img_webp_300?.url),\n            type: \"image/webp\",\n            media: \"(max-width: 456px)\",\n        },\n        {\n            srcSet: getSrcSet(product.img_jpeg_150?.url, product.img_jpeg_300?.url),\n            type: \"image/jpeg\",\n            media: \"(max-width: 456px)\",\n        },\n        {\n            srcSet: getSrcSet(product.img_webp_300?.url, product.img_webp_600?.url),\n            type: \"image/webp\",\n        },\n        {\n            srcSet: getSrcSet(product.img_jpeg_300?.url, product.img_jpeg_600?.url),\n            type: \"image/jpeg\",\n        },\n    ].filter((source: ISource) => source.srcSet);\n};\n\nconst config = {\n    numberInRow: 3,\n    indentForDesktop: 17,\n    indentForMobile: 3,\n};\n\nconst Wrapper = styled.div`\n    width: calc((100% - ${config.indentForDesktop * (config.numberInRow - 1)}px) / ${config.numberInRow});\n    margin-right: ${config.indentForDesktop}px;\n    margin-bottom: ${config.indentForDesktop}px;\n\n    &:nth-child(${config.numberInRow}n) {\n        margin-right: 0;\n    }\n\n    &:nth-last-child(-n + ${config.numberInRow}) {\n        margin-bottom: 0;\n    }\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        width: calc((100% - ${config.indentForMobile * (config.numberInRow - 1)}px) / ${config.numberInRow});\n        margin-right: ${config.indentForMobile}px;\n        margin-bottom: ${config.indentForMobile}px;\n    }\n`;\n\nconst LinkProduct = styled.a`\n    display: block;\n    overflow: hidden;\n    height: 0;\n    padding: 50%;\n    position: relative;\n`;\n\nconst ImageStyled = styled(Image)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport useEventListener from \"src/hooks/useEventListener\";\nimport { productsGetCategoryByUrl } from \"src/store/rootSelector\";\nimport Product from \"./Product/Product\";\n\nexport default function ListProducts() {\n    const { urlCategory } = useParams();\n    const allProducts = useCustomSelector(productsGetCategoryByUrl, urlCategory);\n    const countPagination = 30;\n    const [countNextItem, setCountNextItem] = useState(countPagination);\n    const products = allProducts.slice(0, countNextItem);\n\n    const scrollListener = function () {\n        if (\n            window.scrollY + window.innerHeight + 500 >= document.documentElement.scrollHeight &&\n            countNextItem < allProducts.size\n        ) {\n            setCountNextItem(countNextItem + countPagination);\n        }\n    };\n\n    useEventListener(\"scroll\", scrollListener);\n\n    return (\n        <Wrapper>\n            {products.map((product) => (\n                <Product product={product} key={product.id} />\n            ))}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n    width: 100%;\n`;\n","import React, { useEffect } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { mainGetStatus } from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { loadAll } from \"src/store/main/actions\";\nimport Alert from \"src/components/Alert/Alert\";\nimport Head from \"src/components/Head/Head\";\nimport ListCategories from \"src/components/ListCategories/ListCategories\";\nimport ListProducts from \"src/components/ListProducts/ListProducts\";\n\nexport default function MainPage() {\n    const status = useCustomSelector(mainGetStatus);\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        dispatch(loadAll());\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Wrapper>\n                {status === loadStatus.notLoaded && <Alert type=\"preload\" text=\"Загрузка...\" />}\n                {status === loadStatus.errorServer && <Alert type=\"warning\" text=\"Ошибка сервера\" />}\n                {status === loadStatus.loaded && (\n                    <>\n                        <Head />\n                        <main>\n                            <ListCategories />\n                            <ListProducts />\n                        </main>\n                    </>\n                )}\n            </Wrapper>\n        </ThemeProvider>\n    );\n}\n\nexport interface IThemeProps {\n    theme: {\n        media_mobile: number;\n    };\n}\n\nexport const theme = {\n    media_mobile: 736,\n};\n\nconst Wrapper = styled.div`\n    max-width: 935px;\n    margin: 0 auto;\n    font-size: 16px;\n    background-color: #fafafa;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        font-size: 14px;\n    }\n`;\n","import { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { allActionsTypes } from \"src/store/actionTypes\";\n\nexport default function useCustomDispatch() {\n    return useDispatch<Dispatch<allActionsTypes>>();\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport MainPage from \"./components/MainPage/MainPage\";\n\nconst App: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/category/:urlCategory\" component={MainPage} />\n        </Switch>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware, ConnectedRouter } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./store/rootReducer\";\nimport rootSaga from \"./store/rootSaga\";\nimport services from \"./services\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nimport \"reset-css\";\nimport \"./index.css\";\n\nexport const history = createBrowserHistory({ basename: \"/plugin-collections/build/\" });\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer(history),\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nsagaMiddleware.run(rootSaga(services));\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}